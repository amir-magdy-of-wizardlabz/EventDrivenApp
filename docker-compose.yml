version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass123~
      POSTGRES_MULTIPLE_DATABASES: event-driven-user-service,event-driven-order-service,event-driven-notification-service
    ports:
      - "5432:5432"
    volumes:
      - ./create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ruser
      RABBITMQ_DEFAULT_PASS: pass123~
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 10s
      retries: 5

  smtp4dev:
    image: rnwood/smtp4dev
    ports:
      - "3000:80"
      - "2525:25"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      MessageRetentionPeriod: "30.00:00:00"
      MessageCountLimit: "100"

  userserviceapi:
    build:
      context: .
      dockerfile: UserService.Api/Dockerfile
    ports:
      - "5001:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
    environment:
      ConnectionStrings__DefaultConnection: "Host=db;Database=event-driven-user-service;Username=postgres;Password=pass123~"
      RabbitMQ__HostName: "rabbitmq"
      RabbitMQ__UserName: "ruser"
      RabbitMQ__Password: "pass123~"
      RabbitMQ__UserPublishQueue__Queue: "owner.user.created"
      RabbitMQ__UserPublishQueue__ExchangeName: "UserExchange"
      RabbitMQ__UserPublishQueue__RoutingKey: "user.created"

  orderserviceapi:
    build:
      context: .
      dockerfile: OrderService.Api/Dockerfile
    ports:
      - "5002:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
    environment:
      ConnectionStrings__DefaultConnection: "Host=db;Database=event-driven-order-service;Username=postgres;Password=pass123~"
      RabbitMQ__HostName: "rabbitmq"
      RabbitMQ__UserName: "ruser"
      RabbitMQ__Password: "pass123~"
      RabbitMQ__UserSubscriptionQueue__Queue: "orderservice.user.created"
      RabbitMQ__UserSubscriptionQueue__ExchangeName: "UserExchange"
      RabbitMQ__UserSubscriptionQueue__RoutingKey: "user.created"
      RabbitMQ__OrderPublishQueue__Queue: "orderservice.order.created"
      RabbitMQ__OrderPublishQueue__ExchangeName: "OrderExchange"
      RabbitMQ__OrderPublishQueue__RoutingKey: "order.created"

  notificationserviceapi:
    build:
      context: .
      dockerfile: NotificationService.Api/Dockerfile
    ports:
      - "5003:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
    environment:
      ConnectionStrings__DefaultConnection: "Host=db;Database=event-driven-notification-service;Username=postgres;Password=pass123~"
      RabbitMQ__HostName: "rabbitmq"
      RabbitMQ__UserName: "ruser"
      RabbitMQ__Password: "pass123~"
      RabbitMQ__QueueNames__UserCreatedQueue: "notificationservice.user.created"
      RabbitMQ__ExchangeName: "UserExchange"
      RabbitMQ__RoutingKey: "user.created"
      Smtp__Host: "smtp4dev"
      Smtp__Port: 25
      Smtp__FromAddress: "emailsender@domain.com"
